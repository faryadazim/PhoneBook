{"ast":null,"code":"var _jsxFileName = \"/home/frie/FriexCo/OperationXarB/Projects/QuizApp/src/components/QuestionCard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionCard = _ref => {\n  let {\n    question,\n    answers,\n    callback,\n    userAnswer,\n    questionNumber,\n    totalQuestion\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question : \", questionNumber, \"/\", totalQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: userAnswer,\n      onClick: callback,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: answer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n_c = QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/home/frie/FriexCo/OperationXarB/Projects/QuizApp/src/components/QuestionCard.tsx"],"names":["React","QuestionCard","question","answers","callback","userAnswer","questionNumber","totalQuestion","__html","map","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAYA,OAAO,MAAMC,YAA6B,GAAG,QAAgF;AAAA,MAA/E;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,UAA/B;AAA2CC,IAAAA,cAA3C;AAA2DC,IAAAA;AAA3D,GAA+E;AAC3H,sBACE;AAAA,4BACE;AAAA,gCAAeD,cAAf,OAAgCC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEN;AAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,EAIIC,OAAO,CAACM,GAAR,CAAYC,MAAM,iBAChB;AAAQ,MAAA,QAAQ,EAAEL,UAAlB;AAA8B,MAAA,OAAO,EAAED,QAAvC;AAAA,6BACE;AAAM,QAAA,uBAAuB,EAAE;AAAEI,UAAAA,MAAM,EAAEE;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA,kBADF;AAcD,CAfM;KAAMT,Y","sourcesContent":["import React from 'react'\ntype Props = {\n  question: string,\n  answers: string[],\n  callback: any,\n  userAnswer: any,\n  questionNumber: number,\n  totalQuestion: number,\n};\n\n\n\nexport const QuestionCard: React.FC<Props> = ({ question, answers, callback, userAnswer, questionNumber, totalQuestion }) => {\n  return (\n    <>\n      <p>Question : {questionNumber}/{totalQuestion}</p>\n      <p dangerouslySetInnerHTML={{ __html: question }} />\n      {\n        answers.map(answer => (\n          <button disabled={userAnswer} onClick={callback}>\n            <span dangerouslySetInnerHTML={{ __html: answer }} />\n          </button>\n        ))\n      }\n\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}