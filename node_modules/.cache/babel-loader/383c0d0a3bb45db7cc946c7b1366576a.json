{"ast":null,"code":"var _jsxFileName = \"/home/frie/FriexCo/OperationXarB/Projects/QuizApp/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { QuestionCard } from './components/QuestionCard';\nimport './style.css';\nimport { Difficulty, fetchApi } from './Services/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst total_question = 10;\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [question, setquestion] = useState([]);\n  const [number, setnumber] = useState(0);\n  const [userAnswer, setuserAnswer] = useState([]);\n  const [score, setscore] = useState(0);\n  const [isGameOver, setisGameOver] = useState(true);\n  fetchApi(total_question, Difficulty.Easy);\n\n  const checkAnswer = e => {\n    console.log(\"callback function\");\n  };\n\n  const startQuiz = async () => {\n    console.log(\"start quiz\");\n  };\n\n  const nextQuiz = async () => {\n    console.log(\"next quiz\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startButton\",\n        onClick: startQuiz,\n        children: \" start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Score  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: question[number].question,\n        answers: question[number].answers,\n        callback: checkAnswer,\n        userAnswer: userAnswer ? userAnswer[number] : undefined,\n        questionNumber: number + 1,\n        totalQuestion: total_question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nextButton\",\n        onClick: nextQuiz,\n        children: \" Nextt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"syt9/7SIp7NLaCscI9iHJb9zjRQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/frie/FriexCo/OperationXarB/Projects/QuizApp/src/App.tsx"],"names":["React","useState","QuestionCard","Difficulty","fetchApi","total_question","App","isLoading","setIsLoading","question","setquestion","number","setnumber","userAnswer","setuserAnswer","score","setscore","isGameOver","setisGameOver","Easy","checkAnswer","e","console","log","startQuiz","nextQuiz","answers","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAO,aAAP;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,oBAArC;;;AAGA,MAAMC,cAAc,GAAG,EAAvB;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C;AAIAG,EAAAA,QAAQ,CAACC,cAAD,EAAiBF,UAAU,CAACgB,IAA5B,CAAR;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAA4C;AAC9DC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAED,GAHD;;AAIA,QAAMC,SAAS,GAAG,YAAY;AAE5BF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAHD;;AAIA,QAAME,QAAQ,GAAG,YAAY;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAED,GAHD;;AAOA,sBAAQ;AAAA,2BACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,YAAD;AACE,QAAA,QAAQ,EAAEf,QAAQ,CAACE,MAAD,CAAR,CAAiBF,QAD7B;AAEE,QAAA,OAAO,EAAEA,QAAQ,CAACE,MAAD,CAAR,CAAiBe,OAF5B;AAGE,QAAA,QAAQ,EAAEN,WAHZ;AAIE,QAAA,UAAU,EAAEP,UAAU,GAAGA,UAAU,CAACF,MAAD,CAAb,GAAwBgB,SAJhD;AAKE,QAAA,cAAc,EAAEhB,MAAM,GAAG,CAL3B;AAME,QAAA,aAAa,EAAEN;AANjB;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAEoB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAR;AAkBD;;GA7CQnB,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { QuestionCard } from './components/QuestionCard';\nimport './style.css'\nimport { Difficulty, fetchApi } from './Services/service'\n\n\nconst total_question = 10;\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [question, setquestion] = useState([])\n  const [number, setnumber] = useState(0)\n  const [userAnswer, setuserAnswer] = useState([])\n  const [score, setscore] = useState(0)\n  const [isGameOver, setisGameOver] = useState(true)\n\n\n\n  fetchApi(total_question, Difficulty.Easy);\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    console.log(\"callback function\");\n\n  }\n  const startQuiz = async () => {\n\n    console.log(\"start quiz\");\n  }\n  const nextQuiz = async () => {\n    console.log(\"next quiz\");\n\n  }\n\n\n\n  return (<>\n    <div className=\"App\">\n      <h2> Quiz App</h2>\n      <button className='startButton' onClick={startQuiz}> start</button>\n      <p>Score  </p>\n      <p>Loading...</p>\n      <QuestionCard\n        question={question[number].question}\n        answers={question[number].answers}\n        callback={checkAnswer}\n        userAnswer={userAnswer ? userAnswer[number] : undefined}\n        questionNumber={number + 1}\n        totalQuestion={total_question}\n      />\n      <button className='nextButton' onClick={nextQuiz}> Nextt</button>\n\n    </div></>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}